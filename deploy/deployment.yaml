---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: torn-rw-stats
  namespace: default
  labels:
    app: torn-rw-stats
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: torn-rw-stats
  template:
    metadata:
      labels:
        app: torn-rw-stats
    spec:
      containers:
        - name: torn-rw-stats
          image: ghcr.io/mnuck/torn-rw-stats:latest
          imagePullPolicy: Always

          # Resource limits based on Go application profile
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"

          # Environment variables from ConfigMap
          envFrom:
            - configMapRef:
                name: torn-rw-stats-config

          # Mount config files from secrets
          volumeMounts:
            - name: env-file
              mountPath: /app/.env
              subPath: .env
              readOnly: true
            - name: credentials-file
              mountPath: /app/credentials.json
              subPath: credentials.json
              readOnly: true

          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

      volumes:
        - name: env-file
          secret:
            secretName: torn-rw-stats-secrets
            items:
              - key: .env
                path: .env
        - name: credentials-file
          secret:
            secretName: torn-rw-stats-secrets
            items:
              - key: credentials.json
                path: credentials.json

      # Image pull secrets for private registry
      imagePullSecrets:
        - name: ghcr-cred

      # Security context for pod
      securityContext:
        fsGroup: 1001

      # Restart policy
      restartPolicy: Always
