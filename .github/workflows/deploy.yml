name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      image_tag:
        description: 'Image tag to deploy (default: latest)'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set environment variables
      run: |
        echo "IMAGE_TAG=${{ github.event.inputs.image_tag || 'latest' }}" >> $GITHUB_ENV
        echo "FULL_IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image_tag || 'latest' }}" >> $GITHUB_ENV

    - name: Verify image exists
      run: |
        echo "Verifying image: ${{ env.FULL_IMAGE_NAME }}"
        # Use docker manifest to check if image exists without pulling
        docker manifest inspect ${{ env.FULL_IMAGE_NAME }}

    - name: Update deployment manifest
      run: |
        # Update the image in the deployment manifest
        sed -i 's|image: .*torn_rw_stats:.*|image: ${{ env.FULL_IMAGE_NAME }}|' deploy/deployment.yaml

        # Show the changes
        echo "Updated deployment manifest:"
        grep -A 2 -B 2 "image:" deploy/deployment.yaml

    - name: Validate Kubernetes manifests
      uses: instrumenta/kubeval-action@master
      with:
        files: deploy/

    - name: Deploy to Kubernetes (Dry Run)
      run: |
        echo "Would deploy the following manifests:"
        echo "=================================="
        for file in deploy/*.yaml; do
          echo "--- $file ---"
          cat "$file"
          echo ""
        done

    - name: Deployment Summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ env.FULL_IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Connect to your Kubernetes cluster" >> $GITHUB_STEP_SUMMARY
        echo "2. Create secrets:" >> $GITHUB_STEP_SUMMARY
        echo "   - \`kubectl create secret generic torn-rw-secrets --from-file=.env --from-file=credentials.json\`" >> $GITHUB_STEP_SUMMARY
        echo "3. Run: \`kubectl apply -f deploy/\`" >> $GITHUB_STEP_SUMMARY
        echo "4. Verify deployment: \`kubectl get pods -l app=torn-rw-stats\`" >> $GITHUB_STEP_SUMMARY
        echo "5. Check logs: \`kubectl logs -l app=torn-rw-stats -f\`" >> $GITHUB_STEP_SUMMARY

  post-deploy-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: success()

    steps:
    - name: Wait for deployment
      run: |
        echo "Deployment triggered successfully."
        echo "Manual verification required after applying manifests to cluster."

    - name: Create deployment notification
      run: |
        echo "## ðŸš€ Deployment Ready" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The deployment manifests have been prepared and validated." >> $GITHUB_STEP_SUMMARY
        echo "Apply them to your cluster with:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# First, create the secrets (replace with your actual files)" >> $GITHUB_STEP_SUMMARY
        echo "kubectl create secret generic torn-rw-secrets --from-file=.env --from-file=credentials.json" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Then deploy the application" >> $GITHUB_STEP_SUMMARY
        echo "kubectl apply -f deploy/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Monitor the deployment" >> $GITHUB_STEP_SUMMARY
        echo "kubectl get pods -l app=torn-rw-stats" >> $GITHUB_STEP_SUMMARY
        echo "kubectl logs -l app=torn-rw-stats -f" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY