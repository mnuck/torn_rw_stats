name: CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Container
    runs-on: ubuntu-latest
    outputs:
      sha-tag: ${{ steps.sha-tag.outputs.SHA_TAG }}
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Extract SHA tag
      id: sha-tag
      run: |
        echo "SHA_TAG=$(echo '${{ steps.meta.outputs.tags }}' | grep -o 'sha-[a-f0-9]*' | head -1)" >> $GITHUB_OUTPUT
      if: github.event_name != 'pull_request'

    - name: Check for critical vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.sha-tag.outputs.SHA_TAG }}
        format: 'json'
        output: 'trivy-results.json'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
      if: github.event_name != 'pull_request'

    - name: Show vulnerability scan results
      if: always() && github.event_name != 'pull_request'
      run: |
        if [ -f trivy-results.json ]; then
          echo "=== Trivy Scan Results ==="
          cat trivy-results.json
        else
          echo "No trivy-results.json file found"
        fi

  sign-image:
    name: Sign Container Image
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Install cosign
      uses: sigstore/cosign-installer@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Sign container image
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.sha-tag }}
        cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Verify signature
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.sha-tag }} \
          --certificate-identity-regexp=".*" \
          --certificate-oidc-issuer="https://token.actions.githubusercontent.com"
        cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          --certificate-identity-regexp=".*" \
          --certificate-oidc-issuer="https://token.actions.githubusercontent.com"